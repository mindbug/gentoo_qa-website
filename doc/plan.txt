==== Administration ====
* Create a blog.
    * Create a category like gentoo-soc, profit.
* Contact robbat2@g.o. about shell access, provide ssh key.
* Ask ferringb if I need Trac, if so, contact patrick@g.o.


==== Tasks ====
* Fix the user stories concerning the search functionality.
* Look over the README files.


==== Journal 06-14 -- 06-20 ====
Work on data importer on its way. Not done, but prints nicely to stdout. 
Next task is to make it write to a SQLite3 database. Next after that 
is to implement writing to MySQL.

...

Paused work in the importer to work on the web UI. Purpose is to figure 
out exactly what kind of data the importer needs to output. Work on the
web interface is underway.

Hopefully a rough and ugly web UI will be done by Monday morning.

...

Created an ugly user interface index page. This user interface consists of a couple of Django templates located in 'django_gentoo_pkg/templates/pkgcore/'.

The basic search form that will be used as a rouch template resides in 'django_gentoo_pkg/templates/index.html'.

Next task is to create the Django Model classes.

Quick Django project layout
    * Views are in 'pkgcore/views.py'
    * Templates are in 'templates/pkgcore/'

==== Journal 06-21 -- 06-30 ====
Started to work on the Django Models. A few question marks arose as the requirements to include herds and maintainers was added.

Rough first try at the Models done. Might be a bit of an overkill to create classes for Package, Maintainer and Herd.

...

Was not good, will split the Package into Packages and QAReports. Packages need to have only one version, so a Package has: category, package name, version, and links (ForeignKey as per SQL) to a QAReport. 

Also look over the Herd linkage, and change (almost) all max_lengths to 255.

...

Maybe do Herd as an attribute in Package, and make a Repository model class?

...

Created a new Django application for the project, with simpler Models. The new application is called simple_qa.

Activated the Django Administration pages/interfaces and input some dummy data.

Created the search page for simple_qa. It now works to search for packages by package name. It returns any packages with names containing the query string (case-insensitive).

==== Journal 07-01 -- 07-07 ====
Did more work on the search pages for simple_qa. Decoupled the forms from the models which resulted in a new file: simple_qa/forms.py.

==== Journal 07-08 -- 07-15 ====
Started to work on Python test cases for the data importer.

Cleaned up and refactored the use cases.

Added a new search page, adding functionality to search for packages by 
package name and listing the QA classifications of those packages. This
page is for now called search_qareport, and most of its magic happens in 
simpla_qa/views.py. The idea is to combine all these search pages into a 
single powerful page.
