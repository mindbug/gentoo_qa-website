==== Administration ====
* Create a blog.
    * Create a category like gentoo-soc, profit.
* Contact robbat2@g.o. about shell access, provide ssh key.
* Ask ferringb if I need Trac, if so, contact patrick@g.o.


==== User stories ====
TODO clean this section up.

* Index page search form
    * User inputs text in textfield
    * User inputs text in textfield AND specifies criteria 
      (which database fields to include in the search) via 
      checkboxes. Should they always be visible?

* User wants to browse the database.
    * Include a menu with buttons like: browse by category,
      browse by keywords, browse by architecture? This would
      be very similar to a search query with criterias.

* User wants statistics about the database.
    * Display on index page?

* User wants statistics about packages.
    * Include in search form? Include in package query results?

* User searches by package name
* User searches by category name
* User searches by version
* User searches by keywords/architecture
* User searches by type of QA class
* User searches by any combination of the above

Secondary...
* User searches for packages maintained by specific herds
* User searches for packages belonging to specific repositories


==== Tasks ====
* ASAP
    * Web UI user stories
    * Extract requirements
    * Define the database schema via Django models
    * Insert mock entries into database for testing UI
    * First UI sketch


==== Journal 06-14 -- 06-20 ====
Work on data importer on its way. Not done, but prints nicely to stdout. 
Next task is to make it write to a SQLite3 database. Next after that 
is to implement writing to MySQL.

...

Paused work in the importer to work on the web UI. Purpose is to figure 
out exactly what kind of data the importer needs to output. Work on the
web interface is underway.

Hopefully a rough and ugly web UI will be done by Monday morning.

...

Created an ugly user interface index page. This user interface consists of a couple of Django templates located in 'django_gentoo_pkg/templates/pkgcore/'.

The basic search form that will be used as a rouch template resides in 'django_gentoo_pkg/templates/index.html'.

Next task is to create the Django Model classes.

Quick Django project layout
    * Views are in 'pkgcore/views.py'
    * Templates are in 'templates/pkgcore/'

==== Journal 06-21 -- 06-28 ====
Started to work on the Django Models. A few question marks arose as the requirements to include herds and maintainers was added.

Rough first try at the Models done. Might be a bit of an overkill to create classes for Package, Maintainer and Herd.

...

Was not good, will split the Package into Packages and QAReports. Packages need to have only one version, so a Package has: category, package name, version, and links (ForeignKey as per SQL) to a QAReport. 

Also look over the Herd linkage, and change (almost) all max_lengths to 255.

...

Maybe do Herd as an attribute in Package, and make a Repository model class?

...
